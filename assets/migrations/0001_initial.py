# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2017-12-25 17:18
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=32, unique=True, verbose_name='用户名')),
                ('email', models.EmailField(max_length=254)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name_plural': '用户信息',
            },
        ),
        migrations.CreateModel(
            name='AssetAttr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asset_attr', models.CharField(max_length=64, verbose_name='资产分类')),
            ],
            options={
                'verbose_name_plural': '资产属性',
            },
        ),
        migrations.CreateModel(
            name='AssetInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asset_id', models.CharField(max_length=164, verbose_name='资产编号')),
                ('sn', models.CharField(max_length=128, verbose_name='资产序列号（S/N）')),
                ('mac_addr', models.CharField(blank=True, max_length=32, null=True, verbose_name='MAC地址')),
                ('company_info', models.CharField(max_length=128, verbose_name='公司信息')),
                ('buy_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='购买时间')),
                ('create_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('up_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='启用时间')),
                ('remark', models.CharField(blank=True, max_length=256, null=True, verbose_name='备注')),
                ('asset_attr', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.AssetAttr', verbose_name='资产属性')),
            ],
            options={
                'verbose_name_plural': '资产详情',
            },
        ),
        migrations.CreateModel(
            name='AssetModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asset_model', models.CharField(max_length=64, verbose_name='资产类别')),
                ('asset_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.AssetAttr', verbose_name='资产属性')),
            ],
            options={
                'verbose_name_plural': '资产类别',
            },
        ),
        migrations.CreateModel(
            name='AssetName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asset_name', models.CharField(max_length=32, verbose_name='资产名称')),
            ],
            options={
                'verbose_name_plural': '资产名称',
            },
        ),
        migrations.CreateModel(
            name='AssetProvider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(max_length=64, verbose_name='资产品牌')),
                ('asset_model', models.ManyToManyField(to='assets.AssetModel', verbose_name='资产类别')),
            ],
            options={
                'verbose_name_plural': '资产品牌',
            },
        ),
        migrations.CreateModel(
            name='AssetStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asset_status', models.CharField(max_length=32, verbose_name='资产状态')),
            ],
            options={
                'verbose_name_plural': '资产状态',
            },
        ),
        migrations.CreateModel(
            name='CheckInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check', models.NullBooleanField(verbose_name='是否盘点')),
                ('check_time', models.DateTimeField(default=django.utils.timezone.now, unique=True, verbose_name='盘点时间')),
                ('check_remark', models.CharField(blank=True, max_length=256, null=True, verbose_name='盘点异常备注')),
            ],
            options={
                'verbose_name_plural': '盘点信息',
            },
        ),
        migrations.CreateModel(
            name='DeviceModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_name', models.CharField(max_length=64, verbose_name='设备型号')),
            ],
            options={
                'verbose_name_plural': '设备型号',
            },
        ),
        migrations.CreateModel(
            name='InOutReasons',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('in_out_reasons', models.CharField(max_length=32, verbose_name='出入库原因')),
            ],
            options={
                'verbose_name_plural': '出入库原因',
            },
        ),
        migrations.CreateModel(
            name='InReasons',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('in_reasons', models.ManyToManyField(to='assets.InOutReasons', verbose_name='入库原因')),
            ],
            options={
                'verbose_name_plural': '入库原因',
            },
        ),
        migrations.CreateModel(
            name='InStock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('in_stock', models.ManyToManyField(to='assets.AssetStatus', verbose_name='库存状态')),
            ],
            options={
                'verbose_name_plural': '库存状态',
            },
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level_name', models.CharField(max_length=32, verbose_name='分类级别')),
            ],
            options={
                'verbose_name_plural': '分类级别',
            },
        ),
        migrations.CreateModel(
            name='NonStock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('non_stock', models.ManyToManyField(to='assets.AssetStatus', verbose_name='非库存状态')),
            ],
            options={
                'verbose_name_plural': '非库存状态',
            },
        ),
        migrations.CreateModel(
            name='OfficePlace',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('office_place', models.CharField(max_length=32, unique=True, verbose_name='办公地点')),
            ],
            options={
                'verbose_name_plural': '办公地点',
            },
        ),
        migrations.CreateModel(
            name='OperationLogs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asset_id', models.CharField(max_length=64, verbose_name='资产编号')),
                ('type', models.IntegerField(choices=[(0, '新增入库'), (1, '新增出库')])),
                ('before_field', models.TextField(null=True, verbose_name='修改前字段信息')),
                ('update_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='操作时间')),
                ('after_field', models.TextField(null=True, verbose_name='修改后字段信息')),
                ('operator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='最近操作人')),
            ],
            options={
                'verbose_name_plural': '操作日志',
                'ordering': ['update_time'],
            },
        ),
        migrations.CreateModel(
            name='OutReasons',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('out_reasons', models.ManyToManyField(to='assets.InOutReasons', verbose_name='出库原因')),
            ],
            options={
                'verbose_name_plural': '出库原因',
            },
        ),
        migrations.CreateModel(
            name='ProductConf',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_conf', models.CharField(default='N', max_length=64, verbose_name='配置信息')),
            ],
            options={
                'verbose_name_plural': '配置信息',
            },
        ),
        migrations.CreateModel(
            name='StorePlace',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('store_place', models.CharField(max_length=32, verbose_name='库存地点')),
                ('office_place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.OfficePlace', verbose_name='办公地点')),
            ],
            options={
                'verbose_name_plural': '库存地点',
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('supplier', models.CharField(max_length=64, verbose_name='供应商')),
            ],
            options={
                'verbose_name_plural': '供应商',
            },
        ),
        migrations.CreateModel(
            name='UseType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('use_type', models.CharField(max_length=32, verbose_name='使用类型')),
            ],
            options={
                'verbose_name_plural': '使用类型',
            },
        ),
        migrations.AddField(
            model_name='devicemodel',
            name='product_conf',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.ProductConf', verbose_name='配置信息'),
        ),
        migrations.AddField(
            model_name='devicemodel',
            name='provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.AssetProvider', verbose_name='资产品牌'),
        ),
        migrations.AddField(
            model_name='assetprovider',
            name='level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.Level', verbose_name='分类级别'),
        ),
        migrations.AddField(
            model_name='assetname',
            name='model_name',
            field=models.ManyToManyField(to='assets.DeviceModel', verbose_name='设备型号'),
        ),
        migrations.AddField(
            model_name='assetmodel',
            name='level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.Level', verbose_name='分类级别'),
        ),
        migrations.AddField(
            model_name='assetinfo',
            name='asset_model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.AssetModel', verbose_name='资产类别'),
        ),
        migrations.AddField(
            model_name='assetinfo',
            name='asset_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.AssetName', verbose_name='资产名称'),
        ),
        migrations.AddField(
            model_name='assetinfo',
            name='asset_provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.AssetProvider', verbose_name='品牌'),
        ),
        migrations.AddField(
            model_name='assetinfo',
            name='asset_status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.AssetStatus', verbose_name='资产状态'),
        ),
        migrations.AddField(
            model_name='assetinfo',
            name='device_model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.DeviceModel', verbose_name='设备型号'),
        ),
        migrations.AddField(
            model_name='assetinfo',
            name='in_out_reason',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.InOutReasons', verbose_name='出入库原因'),
        ),
        migrations.AddField(
            model_name='assetinfo',
            name='last_check_time',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.CheckInfo', to_field='check_time', verbose_name='上一次盘点时间'),
        ),
        migrations.AddField(
            model_name='assetinfo',
            name='level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.Level', verbose_name='分类级别'),
        ),
        migrations.AddField(
            model_name='assetinfo',
            name='office_place',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.OfficePlace', verbose_name='办公地点'),
        ),
        migrations.AddField(
            model_name='assetinfo',
            name='operator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='operator_appleset', to=settings.AUTH_USER_MODEL, verbose_name='最近操作人'),
        ),
        migrations.AddField(
            model_name='assetinfo',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owner_appleset', to=settings.AUTH_USER_MODEL, verbose_name='责任人'),
        ),
        migrations.AddField(
            model_name='assetinfo',
            name='product_conf',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.ProductConf', verbose_name='配置信息'),
        ),
        migrations.AddField(
            model_name='assetinfo',
            name='store_place',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.StorePlace', verbose_name='库存地点'),
        ),
        migrations.AddField(
            model_name='assetinfo',
            name='supplier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.Supplier', verbose_name='供应商'),
        ),
        migrations.AddField(
            model_name='assetinfo',
            name='use_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.UseType', verbose_name='使用类型'),
        ),
        migrations.AddField(
            model_name='assetinfo',
            name='user_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_name_appleset', to=settings.AUTH_USER_MODEL, verbose_name='使用人'),
        ),
        migrations.AddField(
            model_name='assetattr',
            name='level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='level_assettype', to='assets.Level', verbose_name='分类级别'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='office_place',
            field=models.ForeignKey(default='1', on_delete=django.db.models.deletion.CASCADE, related_name='office_place_user', to='assets.OfficePlace', verbose_name='办公地点'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='store_place',
            field=models.ManyToManyField(default='1', related_name='store_place_user', to='assets.StorePlace', verbose_name='管理库存地点'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
